/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

/// <reference types="unplugin-vue-router/client" />

import type {
  // type safe route locations
  RouteLocationTypedList,
  RouteLocationResolvedTypedList,
  RouteLocationNormalizedTypedList,
  RouteLocationNormalizedLoadedTypedList,
  RouteLocationAsString,
  RouteLocationAsRelativeTypedList,
  RouteLocationAsPathTypedList,

  // helper types
  // route definitions
  RouteRecordInfo,
  ParamValue,
  ParamValueOneOrMore,
  ParamValueZeroOrMore,
  ParamValueZeroOrOne,

  // vue-router extensions
  _RouterTyped,
  RouterLinkTyped,
  RouterLinkPropsTyped,
  NavigationGuard,
  UseLinkFnTyped,

  // data fetching
  _DataLoader,
  _DefineLoaderOptions,
} from 'unplugin-vue-router/types'

declare module 'vue-router/auto/routes' {
  export interface RouteNamedMap {
    'admin$error': RouteRecordInfo<'admin$error', '/admin/:error(.*)', { error: ParamValue<true> }, { error: ParamValue<false> }>,
    'admin-access-control': RouteRecordInfo<'admin-access-control', '/admin/access-control', Record<never, never>, Record<never, never>>,
    'admin-apps-academy-course-details': RouteRecordInfo<'admin-apps-academy-course-details', '/admin/apps/academy/course-details', Record<never, never>, Record<never, never>>,
    'admin-apps-academy-dashboard': RouteRecordInfo<'admin-apps-academy-dashboard', '/admin/apps/academy/dashboard', Record<never, never>, Record<never, never>>,
    'admin-apps-academy-my-course': RouteRecordInfo<'admin-apps-academy-my-course', '/admin/apps/academy/my-course', Record<never, never>, Record<never, never>>,
    'admin-apps-calendar': RouteRecordInfo<'admin-apps-calendar', '/admin/apps/calendar', Record<never, never>, Record<never, never>>,
    'admin-apps-chat': RouteRecordInfo<'admin-apps-chat', '/admin/apps/chat', Record<never, never>, Record<never, never>>,
    'admin-apps-ecommerce-customer-details-id': RouteRecordInfo<'admin-apps-ecommerce-customer-details-id', '/admin/apps/ecommerce/customer/details/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'admin-apps-ecommerce-customer-list': RouteRecordInfo<'admin-apps-ecommerce-customer-list', '/admin/apps/ecommerce/customer/list', Record<never, never>, Record<never, never>>,
    'admin-apps-ecommerce-manage-review': RouteRecordInfo<'admin-apps-ecommerce-manage-review', '/admin/apps/ecommerce/manage-review', Record<never, never>, Record<never, never>>,
    'admin-apps-ecommerce-order-details-id': RouteRecordInfo<'admin-apps-ecommerce-order-details-id', '/admin/apps/ecommerce/order/details/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'admin-apps-ecommerce-order-list': RouteRecordInfo<'admin-apps-ecommerce-order-list', '/admin/apps/ecommerce/order/list', Record<never, never>, Record<never, never>>,
    'admin-apps-ecommerce-product-add': RouteRecordInfo<'admin-apps-ecommerce-product-add', '/admin/apps/ecommerce/product/add', Record<never, never>, Record<never, never>>,
    'admin-apps-ecommerce-product-category-list': RouteRecordInfo<'admin-apps-ecommerce-product-category-list', '/admin/apps/ecommerce/product/category-list', Record<never, never>, Record<never, never>>,
    'admin-apps-ecommerce-product-list': RouteRecordInfo<'admin-apps-ecommerce-product-list', '/admin/apps/ecommerce/product/list', Record<never, never>, Record<never, never>>,
    'admin-apps-ecommerce-referrals': RouteRecordInfo<'admin-apps-ecommerce-referrals', '/admin/apps/ecommerce/referrals', Record<never, never>, Record<never, never>>,
    'admin-apps-ecommerce-settings': RouteRecordInfo<'admin-apps-ecommerce-settings', '/admin/apps/ecommerce/settings', Record<never, never>, Record<never, never>>,
    'admin-apps-email': RouteRecordInfo<'admin-apps-email', '/admin/apps/email', Record<never, never>, Record<never, never>>,
    'admin-apps-invoice-add': RouteRecordInfo<'admin-apps-invoice-add', '/admin/apps/invoice/add', Record<never, never>, Record<never, never>>,
    'admin-apps-invoice-edit-id': RouteRecordInfo<'admin-apps-invoice-edit-id', '/admin/apps/invoice/edit/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'admin-apps-invoice-list': RouteRecordInfo<'admin-apps-invoice-list', '/admin/apps/invoice/list', Record<never, never>, Record<never, never>>,
    'admin-apps-invoice-preview-id': RouteRecordInfo<'admin-apps-invoice-preview-id', '/admin/apps/invoice/preview/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'admin-apps-logistics-dashboard': RouteRecordInfo<'admin-apps-logistics-dashboard', '/admin/apps/logistics/dashboard', Record<never, never>, Record<never, never>>,
    'admin-apps-logistics-fleet': RouteRecordInfo<'admin-apps-logistics-fleet', '/admin/apps/logistics/fleet', Record<never, never>, Record<never, never>>,
    'admin-apps-permissions': RouteRecordInfo<'admin-apps-permissions', '/admin/apps/permissions', Record<never, never>, Record<never, never>>,
    'admin-apps-roles': RouteRecordInfo<'admin-apps-roles', '/admin/apps/roles', Record<never, never>, Record<never, never>>,
    'admin-apps-user-list': RouteRecordInfo<'admin-apps-user-list', '/admin/apps/user/list', Record<never, never>, Record<never, never>>,
    'admin-apps-user-view-id': RouteRecordInfo<'admin-apps-user-view-id', '/admin/apps/user/view/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    'admin-charts-apex-chart': RouteRecordInfo<'admin-charts-apex-chart', '/admin/charts/apex-chart', Record<never, never>, Record<never, never>>,
    'admin-charts-chartjs': RouteRecordInfo<'admin-charts-chartjs', '/admin/charts/chartjs', Record<never, never>, Record<never, never>>,
    'admin-components-alert': RouteRecordInfo<'admin-components-alert', '/admin/components/alert', Record<never, never>, Record<never, never>>,
    'admin-components-avatar': RouteRecordInfo<'admin-components-avatar', '/admin/components/avatar', Record<never, never>, Record<never, never>>,
    'admin-components-badge': RouteRecordInfo<'admin-components-badge', '/admin/components/badge', Record<never, never>, Record<never, never>>,
    'admin-components-button': RouteRecordInfo<'admin-components-button', '/admin/components/button', Record<never, never>, Record<never, never>>,
    'admin-components-chip': RouteRecordInfo<'admin-components-chip', '/admin/components/chip', Record<never, never>, Record<never, never>>,
    'admin-components-dialog': RouteRecordInfo<'admin-components-dialog', '/admin/components/dialog', Record<never, never>, Record<never, never>>,
    'admin-components-expansion-panel': RouteRecordInfo<'admin-components-expansion-panel', '/admin/components/expansion-panel', Record<never, never>, Record<never, never>>,
    'admin-components-list': RouteRecordInfo<'admin-components-list', '/admin/components/list', Record<never, never>, Record<never, never>>,
    'admin-components-menu': RouteRecordInfo<'admin-components-menu', '/admin/components/menu', Record<never, never>, Record<never, never>>,
    'admin-components-pagination': RouteRecordInfo<'admin-components-pagination', '/admin/components/pagination', Record<never, never>, Record<never, never>>,
    'admin-components-progress-circular': RouteRecordInfo<'admin-components-progress-circular', '/admin/components/progress-circular', Record<never, never>, Record<never, never>>,
    'admin-components-progress-linear': RouteRecordInfo<'admin-components-progress-linear', '/admin/components/progress-linear', Record<never, never>, Record<never, never>>,
    'admin-components-snackbar': RouteRecordInfo<'admin-components-snackbar', '/admin/components/snackbar', Record<never, never>, Record<never, never>>,
    'admin-components-tabs': RouteRecordInfo<'admin-components-tabs', '/admin/components/tabs', Record<never, never>, Record<never, never>>,
    'admin-components-timeline': RouteRecordInfo<'admin-components-timeline', '/admin/components/timeline', Record<never, never>, Record<never, never>>,
    'admin-components-tooltip': RouteRecordInfo<'admin-components-tooltip', '/admin/components/tooltip', Record<never, never>, Record<never, never>>,
    'admin-dashboards-analytics': RouteRecordInfo<'admin-dashboards-analytics', '/admin/dashboards/analytics', Record<never, never>, Record<never, never>>,
    'admin-dashboards-crm': RouteRecordInfo<'admin-dashboards-crm', '/admin/dashboards/crm', Record<never, never>, Record<never, never>>,
    'admin-dashboards-ecommerce': RouteRecordInfo<'admin-dashboards-ecommerce', '/admin/dashboards/ecommerce', Record<never, never>, Record<never, never>>,
    'admin-extensions-swiper': RouteRecordInfo<'admin-extensions-swiper', '/admin/extensions/swiper', Record<never, never>, Record<never, never>>,
    'admin-extensions-tour': RouteRecordInfo<'admin-extensions-tour', '/admin/extensions/tour', Record<never, never>, Record<never, never>>,
    'admin-forgot-password': RouteRecordInfo<'admin-forgot-password', '/admin/forgot-password', Record<never, never>, Record<never, never>>,
    'admin-forms-autocomplete': RouteRecordInfo<'admin-forms-autocomplete', '/admin/forms/autocomplete', Record<never, never>, Record<never, never>>,
    'admin-forms-checkbox': RouteRecordInfo<'admin-forms-checkbox', '/admin/forms/checkbox', Record<never, never>, Record<never, never>>,
    'admin-forms-combobox': RouteRecordInfo<'admin-forms-combobox', '/admin/forms/combobox', Record<never, never>, Record<never, never>>,
    'admin-forms-custom-input': RouteRecordInfo<'admin-forms-custom-input', '/admin/forms/custom-input', Record<never, never>, Record<never, never>>,
    'admin-forms-date-time-picker': RouteRecordInfo<'admin-forms-date-time-picker', '/admin/forms/date-time-picker', Record<never, never>, Record<never, never>>,
    'admin-forms-editors': RouteRecordInfo<'admin-forms-editors', '/admin/forms/editors', Record<never, never>, Record<never, never>>,
    'admin-forms-file-input': RouteRecordInfo<'admin-forms-file-input', '/admin/forms/file-input', Record<never, never>, Record<never, never>>,
    'admin-forms-form-layouts': RouteRecordInfo<'admin-forms-form-layouts', '/admin/forms/form-layouts', Record<never, never>, Record<never, never>>,
    'admin-forms-form-validation': RouteRecordInfo<'admin-forms-form-validation', '/admin/forms/form-validation', Record<never, never>, Record<never, never>>,
    'admin-forms-form-wizard-icons': RouteRecordInfo<'admin-forms-form-wizard-icons', '/admin/forms/form-wizard-icons', Record<never, never>, Record<never, never>>,
    'admin-forms-form-wizard-numbered': RouteRecordInfo<'admin-forms-form-wizard-numbered', '/admin/forms/form-wizard-numbered', Record<never, never>, Record<never, never>>,
    'admin-forms-radio': RouteRecordInfo<'admin-forms-radio', '/admin/forms/radio', Record<never, never>, Record<never, never>>,
    'admin-forms-range-slider': RouteRecordInfo<'admin-forms-range-slider', '/admin/forms/range-slider', Record<never, never>, Record<never, never>>,
    'admin-forms-rating': RouteRecordInfo<'admin-forms-rating', '/admin/forms/rating', Record<never, never>, Record<never, never>>,
    'admin-forms-select': RouteRecordInfo<'admin-forms-select', '/admin/forms/select', Record<never, never>, Record<never, never>>,
    'admin-forms-slider': RouteRecordInfo<'admin-forms-slider', '/admin/forms/slider', Record<never, never>, Record<never, never>>,
    'admin-forms-switch': RouteRecordInfo<'admin-forms-switch', '/admin/forms/switch', Record<never, never>, Record<never, never>>,
    'admin-forms-textarea': RouteRecordInfo<'admin-forms-textarea', '/admin/forms/textarea', Record<never, never>, Record<never, never>>,
    'admin-forms-textfield': RouteRecordInfo<'admin-forms-textfield', '/admin/forms/textfield', Record<never, never>, Record<never, never>>,
    'admin-front-pages-checkout': RouteRecordInfo<'admin-front-pages-checkout', '/admin/front-pages/checkout', Record<never, never>, Record<never, never>>,
    'admin-front-pages-help-center': RouteRecordInfo<'admin-front-pages-help-center', '/admin/front-pages/help-center', Record<never, never>, Record<never, never>>,
    'admin-front-pages-help-center-article-title': RouteRecordInfo<'admin-front-pages-help-center-article-title', '/admin/front-pages/help-center/article/:title', { title: ParamValue<true> }, { title: ParamValue<false> }>,
    'admin-front-pages-landing-page': RouteRecordInfo<'admin-front-pages-landing-page', '/admin/front-pages/landing-page', Record<never, never>, Record<never, never>>,
    'admin-front-pages-payment': RouteRecordInfo<'admin-front-pages-payment', '/admin/front-pages/payment', Record<never, never>, Record<never, never>>,
    'admin-front-pages-pricing': RouteRecordInfo<'admin-front-pages-pricing', '/admin/front-pages/pricing', Record<never, never>, Record<never, never>>,
    'admin-login': RouteRecordInfo<'admin-login', '/admin/login', Record<never, never>, Record<never, never>>,
    'admin-not-authorized': RouteRecordInfo<'admin-not-authorized', '/admin/not-authorized', Record<never, never>, Record<never, never>>,
    'admin-pages-account-settings-tab': RouteRecordInfo<'admin-pages-account-settings-tab', '/admin/pages/account-settings/:tab', { tab: ParamValue<true> }, { tab: ParamValue<false> }>,
    'admin-pages-authentication-forgot-password-v1': RouteRecordInfo<'admin-pages-authentication-forgot-password-v1', '/admin/pages/authentication/forgot-password-v1', Record<never, never>, Record<never, never>>,
    'admin-pages-authentication-forgot-password-v2': RouteRecordInfo<'admin-pages-authentication-forgot-password-v2', '/admin/pages/authentication/forgot-password-v2', Record<never, never>, Record<never, never>>,
    'admin-pages-authentication-login-v1': RouteRecordInfo<'admin-pages-authentication-login-v1', '/admin/pages/authentication/login-v1', Record<never, never>, Record<never, never>>,
    'admin-pages-authentication-login-v2': RouteRecordInfo<'admin-pages-authentication-login-v2', '/admin/pages/authentication/login-v2', Record<never, never>, Record<never, never>>,
    'admin-pages-authentication-register-multi-steps': RouteRecordInfo<'admin-pages-authentication-register-multi-steps', '/admin/pages/authentication/register-multi-steps', Record<never, never>, Record<never, never>>,
    'admin-pages-authentication-register-v1': RouteRecordInfo<'admin-pages-authentication-register-v1', '/admin/pages/authentication/register-v1', Record<never, never>, Record<never, never>>,
    'admin-pages-authentication-register-v2': RouteRecordInfo<'admin-pages-authentication-register-v2', '/admin/pages/authentication/register-v2', Record<never, never>, Record<never, never>>,
    'admin-pages-authentication-reset-password-v1': RouteRecordInfo<'admin-pages-authentication-reset-password-v1', '/admin/pages/authentication/reset-password-v1', Record<never, never>, Record<never, never>>,
    'admin-pages-authentication-reset-password-v2': RouteRecordInfo<'admin-pages-authentication-reset-password-v2', '/admin/pages/authentication/reset-password-v2', Record<never, never>, Record<never, never>>,
    'admin-pages-authentication-two-steps-v1': RouteRecordInfo<'admin-pages-authentication-two-steps-v1', '/admin/pages/authentication/two-steps-v1', Record<never, never>, Record<never, never>>,
    'admin-pages-authentication-two-steps-v2': RouteRecordInfo<'admin-pages-authentication-two-steps-v2', '/admin/pages/authentication/two-steps-v2', Record<never, never>, Record<never, never>>,
    'admin-pages-authentication-verify-email-v1': RouteRecordInfo<'admin-pages-authentication-verify-email-v1', '/admin/pages/authentication/verify-email-v1', Record<never, never>, Record<never, never>>,
    'admin-pages-authentication-verify-email-v2': RouteRecordInfo<'admin-pages-authentication-verify-email-v2', '/admin/pages/authentication/verify-email-v2', Record<never, never>, Record<never, never>>,
    'admin-pages-cards-card-actions': RouteRecordInfo<'admin-pages-cards-card-actions', '/admin/pages/cards/card-actions', Record<never, never>, Record<never, never>>,
    'admin-pages-cards-card-advance': RouteRecordInfo<'admin-pages-cards-card-advance', '/admin/pages/cards/card-advance', Record<never, never>, Record<never, never>>,
    'admin-pages-cards-card-basic': RouteRecordInfo<'admin-pages-cards-card-basic', '/admin/pages/cards/card-basic', Record<never, never>, Record<never, never>>,
    'admin-pages-cards-card-statistics': RouteRecordInfo<'admin-pages-cards-card-statistics', '/admin/pages/cards/card-statistics', Record<never, never>, Record<never, never>>,
    'admin-pages-cards-card-widgets': RouteRecordInfo<'admin-pages-cards-card-widgets', '/admin/pages/cards/card-widgets', Record<never, never>, Record<never, never>>,
    'admin-pages-dialog-examples': RouteRecordInfo<'admin-pages-dialog-examples', '/admin/pages/dialog-examples', Record<never, never>, Record<never, never>>,
    'admin-pages-edit-page_name': RouteRecordInfo<'admin-pages-edit-page_name', '/admin/pages/edit/:page_name', { page_name: ParamValue<true> }, { page_name: ParamValue<false> }>,
    'admin-pages-faq': RouteRecordInfo<'admin-pages-faq', '/admin/pages/faq', Record<never, never>, Record<never, never>>,
    'admin-pages-icons': RouteRecordInfo<'admin-pages-icons', '/admin/pages/icons', Record<never, never>, Record<never, never>>,
    'admin-pages-misc-coming-soon': RouteRecordInfo<'admin-pages-misc-coming-soon', '/admin/pages/misc/coming-soon', Record<never, never>, Record<never, never>>,
    'admin-pages-misc-under-maintenance': RouteRecordInfo<'admin-pages-misc-under-maintenance', '/admin/pages/misc/under-maintenance', Record<never, never>, Record<never, never>>,
    'admin-pages-pricing': RouteRecordInfo<'admin-pages-pricing', '/admin/pages/pricing', Record<never, never>, Record<never, never>>,
    'admin-pages-typography': RouteRecordInfo<'admin-pages-typography', '/admin/pages/typography', Record<never, never>, Record<never, never>>,
    'admin-pages-user-profile-tab': RouteRecordInfo<'admin-pages-user-profile-tab', '/admin/pages/user-profile/:tab', { tab: ParamValue<true> }, { tab: ParamValue<false> }>,
    'admin-register': RouteRecordInfo<'admin-register', '/admin/register', Record<never, never>, Record<never, never>>,
    'admin-tables-data-table': RouteRecordInfo<'admin-tables-data-table', '/admin/tables/data-table', Record<never, never>, Record<never, never>>,
    'admin-tables-simple-table': RouteRecordInfo<'admin-tables-simple-table', '/admin/tables/simple-table', Record<never, never>, Record<never, never>>,
    'admin-test': RouteRecordInfo<'admin-test', '/admin/test', Record<never, never>, Record<never, never>>,
    'admin-wizard-examples-checkout': RouteRecordInfo<'admin-wizard-examples-checkout', '/admin/wizard-examples/checkout', Record<never, never>, Record<never, never>>,
    'admin-wizard-examples-create-deal': RouteRecordInfo<'admin-wizard-examples-create-deal', '/admin/wizard-examples/create-deal', Record<never, never>, Record<never, never>>,
    'admin-wizard-examples-property-listing': RouteRecordInfo<'admin-wizard-examples-property-listing', '/admin/wizard-examples/property-listing', Record<never, never>, Record<never, never>>,
    'apps-email-filter': RouteRecordInfo<'apps-email-filter', '/apps/email/:filter', { filter: ParamValue<true> }, { filter: ParamValue<false> }>,
    'apps-email-label': RouteRecordInfo<'apps-email-label', '/apps/email/:label', { label: ParamValue<true> }, { label: ParamValue<false> }>,
  }
}

declare module 'vue-router/auto' {
  import type { RouteNamedMap } from 'vue-router/auto/routes'

  export type RouterTyped = _RouterTyped<RouteNamedMap>

  /**
   * Type safe version of `RouteLocationNormalized` (the type of `to` and `from` in navigation guards).
   * Allows passing the name of the route to be passed as a generic.
   */
  export type RouteLocationNormalized<Name extends keyof RouteNamedMap = keyof RouteNamedMap> = RouteLocationNormalizedTypedList<RouteNamedMap>[Name]

  /**
   * Type safe version of `RouteLocationNormalizedLoaded` (the return type of `useRoute()`).
   * Allows passing the name of the route to be passed as a generic.
   */
  export type RouteLocationNormalizedLoaded<Name extends keyof RouteNamedMap = keyof RouteNamedMap> = RouteLocationNormalizedLoadedTypedList<RouteNamedMap>[Name]

  /**
   * Type safe version of `RouteLocationResolved` (the returned route of `router.resolve()`).
   * Allows passing the name of the route to be passed as a generic.
   */
  export type RouteLocationResolved<Name extends keyof RouteNamedMap = keyof RouteNamedMap> = RouteLocationResolvedTypedList<RouteNamedMap>[Name]

  /**
   * Type safe version of `RouteLocation` . Allows passing the name of the route to be passed as a generic.
   */
  export type RouteLocation<Name extends keyof RouteNamedMap = keyof RouteNamedMap> = RouteLocationTypedList<RouteNamedMap>[Name]

  /**
   * Type safe version of `RouteLocationRaw` . Allows passing the name of the route to be passed as a generic.
   */
  export type RouteLocationRaw<Name extends keyof RouteNamedMap = keyof RouteNamedMap> =
    | RouteLocationAsString<RouteNamedMap>
    | RouteLocationAsRelativeTypedList<RouteNamedMap>[Name]
    | RouteLocationAsPathTypedList<RouteNamedMap>[Name]

  /**
   * Generate a type safe params for a route location. Requires the name of the route to be passed as a generic.
   */
  export type RouteParams<Name extends keyof RouteNamedMap> = RouteNamedMap[Name]['params']
  /**
   * Generate a type safe raw params for a route location. Requires the name of the route to be passed as a generic.
   */
  export type RouteParamsRaw<Name extends keyof RouteNamedMap> = RouteNamedMap[Name]['paramsRaw']

  export function useRouter(): RouterTyped
  export function useRoute<Name extends keyof RouteNamedMap = keyof RouteNamedMap>(name?: Name): RouteLocationNormalizedLoadedTypedList<RouteNamedMap>[Name]

  export const useLink: UseLinkFnTyped<RouteNamedMap>

  export function onBeforeRouteLeave(guard: NavigationGuard<RouteNamedMap>): void
  export function onBeforeRouteUpdate(guard: NavigationGuard<RouteNamedMap>): void

  export const RouterLink: RouterLinkTyped<RouteNamedMap>
  export const RouterLinkProps: RouterLinkPropsTyped<RouteNamedMap>

  // Experimental Data Fetching

  export function defineLoader<
    P extends Promise<any>,
    Name extends keyof RouteNamedMap = keyof RouteNamedMap,
    isLazy extends boolean = false,
  >(
    name: Name,
    loader: (route: RouteLocationNormalizedLoaded<Name>) => P,
    options?: _DefineLoaderOptions<isLazy>,
  ): _DataLoader<Awaited<P>, isLazy>
  export function defineLoader<
    P extends Promise<any>,
    isLazy extends boolean = false,
  >(
    loader: (route: RouteLocationNormalizedLoaded) => P,
    options?: _DefineLoaderOptions<isLazy>,
  ): _DataLoader<Awaited<P>, isLazy>

  export {
    _definePage as definePage,
    _HasDataLoaderMeta as HasDataLoaderMeta,
    _setupDataFetchingGuard as setupDataFetchingGuard,
    _stopDataFetchingScope as stopDataFetchingScope,
  } from 'unplugin-vue-router/runtime'
}

declare module 'vue-router' {
  import type { RouteNamedMap } from 'vue-router/auto/routes'

  export interface TypesConfig {
    beforeRouteUpdate: NavigationGuard<RouteNamedMap>
    beforeRouteLeave: NavigationGuard<RouteNamedMap>

    $route: RouteLocationNormalizedLoadedTypedList<RouteNamedMap>[keyof RouteNamedMap]
    $router: _RouterTyped<RouteNamedMap>

    RouterLink: RouterLinkTyped<RouteNamedMap>
  }
}
